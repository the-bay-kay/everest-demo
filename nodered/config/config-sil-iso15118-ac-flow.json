[
    {
        "id": "2cf4079de85dadc4",
        "type": "tab",
        "label": "Debug",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b21fce115fe46617",
        "type": "tab",
        "label": "RFID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f2458a538a8e5f3f",
        "type": "tab",
        "label": "Connector 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c545737cb63c89af",
        "type": "tab",
        "label": "PowerCurve Selector",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6f6c30816dcbaaad",
        "type": "group",
        "z": "f2458a538a8e5f3f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3294112fae5f8935"
        ],
        "x": 1114,
        "y": 439,
        "w": 152,
        "h": 82
    },
    {
        "id": "7140803fb3989089",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "EVerest",
                "default": "#4B7930",
                "baseColor": "#2a62ac",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#2a62ac",
                    "value": "#2a62ac",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#2a62ac",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#4f88d4",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#2a62ac",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "EVerest",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "fc8686af.48d178",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt-server",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5e36140d.127f1c",
        "type": "ui_group",
        "name": "PowerMeter",
        "tab": "50c487c1.27e508",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ebbb0e3f.53fbf",
        "type": "ui_group",
        "name": "Actions",
        "tab": "50c487c1.27e508",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1709edaf.162962",
        "type": "ui_group",
        "name": "Debug",
        "tab": "50c487c1.27e508",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8d6f402b.8f007",
        "type": "ui_group",
        "name": "KeepAlive",
        "tab": "50c487c1.27e508",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1ebee360.265b5d",
        "type": "ui_group",
        "name": "PowerMeter",
        "tab": "50c487c1.27e508",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d3f19d5c.593e5",
        "type": "ui_group",
        "name": "State",
        "tab": "50c487c1.27e508",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b364f7eb4621082b",
        "type": "ui_group",
        "name": "Connector 1 [ISO15118]",
        "tab": "d3ada9fa4cf6ac53",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7cd2ccabb1265f7a",
        "type": "ui_group",
        "name": "RFID",
        "tab": "d3ada9fa4cf6ac53",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "21e40a4a97a50168",
        "type": "ui_group",
        "name": "Connector 2 [Basic Charging]",
        "tab": "d3ada9fa4cf6ac53",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "50c487c1.27e508",
        "type": "ui_tab",
        "name": "Debug",
        "icon": "fa-fire",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d3ada9fa4cf6ac53",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b3feb6e4367b645",
        "type": "ui_group",
        "name": "PowerCurve Selection",
        "tab": "d3ada9fa4cf6ac53",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "24301019.1f614",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1
    },
    {
        "id": "66773ed405f44bd2",
        "type": "ui_spacer",
        "z": "2cf4079de85dadc4",
        "name": "spacer",
        "group": "27651fee38a05406",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c6ae9ecd99ea5cd",
        "type": "ui_spacer",
        "z": "2cf4079de85dadc4",
        "name": "spacer",
        "group": "27651fee38a05406",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "92a55f2bbf583979",
        "type": "ui_spacer",
        "z": "2cf4079de85dadc4",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "0d1785586aad4544",
        "type": "ui_spacer",
        "z": "2cf4079de85dadc4",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": "6",
        "height": "1"
    },
    {
        "id": "9134f48397409828",
        "type": "mqtt in",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/powermeter/vrmsL1",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "46a5d1222050599d"
            ]
        ]
    },
    {
        "id": "46a5d1222050599d",
        "type": "ui_chart",
        "z": "2cf4079de85dadc4",
        "name": "",
        "group": "5e36140d.127f1c",
        "order": 11,
        "width": 0,
        "height": 0,
        "label": "vrmsL1",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "60",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c6c1972226a6df24",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/enable",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "0e3ac882227d4d13",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/disable",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 500,
        "y": 480,
        "wires": []
    },
    {
        "id": "4d3fc10753d9486b",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 120,
        "y": 460,
        "wires": [
            [
                "21d4364329ab7985"
            ]
        ]
    },
    {
        "id": "21d4364329ab7985",
        "type": "switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 460,
        "wires": [
            [
                "c6c1972226a6df24"
            ],
            [
                "0e3ac882227d4d13"
            ]
        ]
    },
    {
        "id": "04f75d73ea7763fa",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "setThreePhases",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 140,
        "y": 540,
        "wires": [
            [
                "8c5e4d70f1540615"
            ]
        ]
    },
    {
        "id": "8c5e4d70f1540615",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/set_three_phases",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "1f11fd6f9a123a98",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "enableRCD",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 130,
        "y": 600,
        "wires": [
            [
                "6beb1f8af94d1fbd"
            ]
        ]
    },
    {
        "id": "6beb1f8af94d1fbd",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/enable_rcd",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 350,
        "y": 600,
        "wires": []
    },
    {
        "id": "6d397343092cbdbc",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "setHasVentilation",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 150,
        "y": 660,
        "wires": [
            [
                "f621633d77ab1fdf"
            ]
        ]
    },
    {
        "id": "f621633d77ab1fdf",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/set_has_ventilation",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 420,
        "y": 660,
        "wires": []
    },
    {
        "id": "2657c13dc9f3f4d8",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/set_auth",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "db273766c59b4192",
        "type": "ui_button",
        "z": "2cf4079de85dadc4",
        "name": "",
        "group": "ebbb0e3f.53fbf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "setAuth(USERID)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "USERID",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "2657c13dc9f3f4d8"
            ]
        ]
    },
    {
        "id": "8b2864543f746d0c",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "switch3phWhileCharging",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 170,
        "y": 720,
        "wires": [
            [
                "1bd744ada95e2aaa"
            ]
        ]
    },
    {
        "id": "1bd744ada95e2aaa",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/switch_three_phases_while_charging",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 530,
        "y": 720,
        "wires": []
    },
    {
        "id": "b15365e78ccc2884",
        "type": "mqtt in",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/debug_json",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 960,
        "wires": [
            [
                "c4acf7fcc3df6da3"
            ]
        ]
    },
    {
        "id": "c4acf7fcc3df6da3",
        "type": "json",
        "z": "2cf4079de85dadc4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 960,
        "wires": [
            [
                "0e4b7854e7e3a588"
            ]
        ]
    },
    {
        "id": "0e4b7854e7e3a588",
        "type": "function",
        "z": "2cf4079de85dadc4",
        "name": "",
        "func": "var json = msg.payload;\n\n\n//tab[top] = {'Variable' : top, 'Value' : pay};\n\n\nnewpayload = [];\nfor(var index in json) {\n    newpayload.push({'Variable' : index, 'Value' : json[index]});\n}\n\nmsg.payload = newpayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 960,
        "wires": [
            [
                "91882276c31a788c"
            ]
        ]
    },
    {
        "id": "91882276c31a788c",
        "type": "ui_table",
        "z": "2cf4079de85dadc4",
        "group": "1709edaf.162962",
        "name": "Debug",
        "order": 12,
        "width": "6",
        "height": "11",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 680,
        "y": 960,
        "wires": []
    },
    {
        "id": "be709a18792e6b9a",
        "type": "mqtt in",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/keepalive_json",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "4b575d06730dfb59"
            ]
        ]
    },
    {
        "id": "4b575d06730dfb59",
        "type": "json",
        "z": "2cf4079de85dadc4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "b2722fd60774be1b"
            ]
        ]
    },
    {
        "id": "b2722fd60774be1b",
        "type": "function",
        "z": "2cf4079de85dadc4",
        "name": "",
        "func": "var json = msg.payload;\n\n\n//tab[top] = {'Variable' : top, 'Value' : pay};\n\n\nnewpayload = [];\nfor(var index in json) {\n    newpayload.push({'Variable' : index, 'Value' : json[index]});\n}\n\nmsg.payload = newpayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "d9b86a012292719b"
            ]
        ]
    },
    {
        "id": "d9b86a012292719b",
        "type": "ui_table",
        "z": "2cf4079de85dadc4",
        "group": "8d6f402b.8f007",
        "name": "KeepAlive",
        "order": 12,
        "width": "6",
        "height": "4",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 690,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6d641db4b78c5536",
        "type": "mqtt in",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/powermeter_json",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "e6422b26ae9f8723"
            ]
        ]
    },
    {
        "id": "e6422b26ae9f8723",
        "type": "json",
        "z": "2cf4079de85dadc4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "7ee5989dd66fa04b"
            ]
        ]
    },
    {
        "id": "7ee5989dd66fa04b",
        "type": "function",
        "z": "2cf4079de85dadc4",
        "name": "",
        "func": "var json = msg.payload;\n\n\n//tab[top] = {'Variable' : top, 'Value' : pay};\n\n\nnewpayload = [];\nfor(var index in json) {\n    newpayload.push({'Variable' : index, 'Value' : json[index]});\n}\n\nmsg.payload = newpayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "8a76c72c1b01d231"
            ]
        ]
    },
    {
        "id": "8a76c72c1b01d231",
        "type": "ui_table",
        "z": "2cf4079de85dadc4",
        "group": "1ebee360.265b5d",
        "name": "PowerMeter",
        "order": 12,
        "width": "6",
        "height": "11",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 710,
        "y": 1200,
        "wires": []
    },
    {
        "id": "66d5c6c30ab38dfb",
        "type": "mqtt in",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/state/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "24fa00f1202e5f9d"
            ]
        ]
    },
    {
        "id": "24fa00f1202e5f9d",
        "type": "function",
        "z": "2cf4079de85dadc4",
        "name": "",
        "func": "let cur_topic_index = -1;\nlet topics_list_length = 0;\n\nvar topics_list = global.get(\"state_topics_list\");\nvar payload_list = global.get(\"state_payload_list\");\nvar new_payload = [];\n\nfor (var topics_list_index in topics_list) {\n    if ( (topics_list[topics_list_index].indexOf(msg.topic) >= 0) && (topics_list[topics_list_index].length == msg.topic.length) ) {\n        cur_topic_index = topics_list_index;\n        break;\n    }\n    topics_list_length++;\n}\n\nif (cur_topic_index > -1) {\n    payload_list[cur_topic_index] = msg.payload;\n} else {\n    topics_list.push(msg.topic);\n    payload_list.push(msg.payload);\n}\n\nglobal.set(\"state_topics_list\", topics_list);\nglobal.set(\"state_payload_list\", payload_list);\n\n\nfor (var index in payload_list) {\n    new_payload.push({'Variable': topics_list[index].substr(16, topics_list[index].length), 'Value': payload_list[index]});\n}\n\nmsg.payload = new_payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"state_topics_list\", []);\nglobal.set(\"state_payload_list\", []);",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "dbfcceaad597d996"
            ]
        ]
    },
    {
        "id": "dbfcceaad597d996",
        "type": "ui_table",
        "z": "2cf4079de85dadc4",
        "group": "d3f19d5c.593e5",
        "name": "State",
        "order": 12,
        "width": "6",
        "height": "4",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 690,
        "y": 1020,
        "wires": []
    },
    {
        "id": "be356ec52105207f",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "enableHLC",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 130,
        "y": 780,
        "wires": [
            [
                "d9dc6430873fb9c2"
            ]
        ]
    },
    {
        "id": "d9dc6430873fb9c2",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/enable_hlc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 350,
        "y": 780,
        "wires": []
    },
    {
        "id": "bd88d83237455d62",
        "type": "ui_switch",
        "z": "2cf4079de85dadc4",
        "name": "",
        "label": "Simulation RCD",
        "tooltip": "",
        "group": "ebbb0e3f.53fbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 140,
        "y": 840,
        "wires": [
            [
                "bc96eb9cdebef731"
            ]
        ]
    },
    {
        "id": "bc96eb9cdebef731",
        "type": "mqtt out",
        "z": "2cf4079de85dadc4",
        "name": "",
        "topic": "/external/cmd/enable_rcd",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 350,
        "y": 840,
        "wires": []
    },
    {
        "id": "5ec0a592bbcd6d11",
        "type": "comment",
        "z": "2cf4079de85dadc4",
        "name": "Debug",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "8bb68bf2d3759eee",
        "type": "mqtt out",
        "z": "b21fce115fe46617",
        "name": "",
        "topic": "everest_api/dummy_token_provider/cmd/provide",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1000,
        "y": 120,
        "wires": []
    },
    {
        "id": "295dd9a925dc414b",
        "type": "ui_dropdown",
        "z": "b21fce115fe46617",
        "name": "",
        "label": "id_token",
        "tooltip": "",
        "place": "Select option",
        "group": "7cd2ccabb1265f7a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "DEADBEEF",
                "value": "DEADBEEF",
                "type": "str"
            },
            {
                "label": "ABC12345",
                "value": "ABC12345",
                "type": "str"
            },
            {
                "label": "VID:AABBCCDDEEFF",
                "value": "VID:AABBCCDDEEFF",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "id_token",
        "topicType": "str",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "6059bbd3f4656019"
            ]
        ]
    },
    {
        "id": "435e4935ede8f687",
        "type": "ui_switch",
        "z": "b21fce115fe46617",
        "name": "",
        "label": "prevalidated",
        "tooltip": "",
        "group": "7cd2ccabb1265f7a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "prevalidated",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "6059bbd3f4656019"
            ]
        ]
    },
    {
        "id": "6bd6a60c4c65d178",
        "type": "ui_text_input",
        "z": "b21fce115fe46617",
        "name": "",
        "label": "type (2-32)",
        "tooltip": "",
        "group": "7cd2ccabb1265f7a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "token_type",
        "topicType": "str",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "6059bbd3f4656019"
            ]
        ]
    },
    {
        "id": "38e9acaf5091b345",
        "type": "debug",
        "z": "b21fce115fe46617",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 200,
        "wires": []
    },
    {
        "id": "4445e015fa95c567",
        "type": "inject",
        "z": "b21fce115fe46617",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "id_token",
        "payload": "DEADBEEF",
        "payloadType": "str",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "295dd9a925dc414b"
            ]
        ]
    },
    {
        "id": "2d0ae980bc59c9e6",
        "type": "inject",
        "z": "b21fce115fe46617",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "token_type",
        "payload": "RFID",
        "payloadType": "str",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "6bd6a60c4c65d178"
            ]
        ]
    },
    {
        "id": "d4362d14f63e079f",
        "type": "inject",
        "z": "b21fce115fe46617",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "prevalidated",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "435e4935ede8f687"
            ]
        ]
    },
    {
        "id": "6059bbd3f4656019",
        "type": "function",
        "z": "b21fce115fe46617",
        "name": "Swipe token",
        "func": "if (msg.topic.indexOf('id_token') > -1) flow.set('id_token', msg.payload);\nif (msg.topic.indexOf('token_type') > -1) flow.set('token_type', msg.payload);\nif (msg.topic.indexOf('prevalidated') > -1) flow.set('prevalidated', msg.payload);\nif (msg.topic.indexOf('connectors') > -1) flow.set('connectors', msg.payload);\nif (msg.topic.indexOf('complete') > -1) {\n    msg.payload = {\n        'id_token': {\n    'value': flow.get('id_token'),\n 'type': 'ISO14443'\n},\n        'authorization_type': flow.get('token_type'),\n        'prevalidated': flow.get('prevalidated'),\n        'connectors': [flow.get('connectors')]\n    };\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 160,
        "wires": [
            [
                "38e9acaf5091b345",
                "8bb68bf2d3759eee"
            ]
        ]
    },
    {
        "id": "0cda1a71712424ea",
        "type": "ui_button",
        "z": "b21fce115fe46617",
        "name": "",
        "group": "7cd2ccabb1265f7a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Swipe RFID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "complete",
        "topicType": "str",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "6059bbd3f4656019"
            ]
        ]
    },
    {
        "id": "e7dd463b128b5a22",
        "type": "inject",
        "z": "b21fce115fe46617",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "connectors",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "a9afb664968ba7aa"
            ]
        ]
    },
    {
        "id": "a9afb664968ba7aa",
        "type": "ui_numeric",
        "z": "b21fce115fe46617",
        "name": "",
        "label": "connectors",
        "tooltip": "",
        "group": "7cd2ccabb1265f7a",
        "order": 0,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "connectors",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": 10,
        "step": 1,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "6059bbd3f4656019"
            ]
        ]
    },
    {
        "id": "ec40915a9afee4f8",
        "type": "comment",
        "z": "f2458a538a8e5f3f",
        "name": "Initialize the Connector number",
        "info": "",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "1091c87b5172bb7f",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connector_number",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fc956cffe989476b",
        "type": "inject",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "1091c87b5172bb7f"
            ]
        ]
    },
    {
        "id": "b1449e83642f6d4b",
        "type": "comment",
        "z": "f2458a538a8e5f3f",
        "name": "Data to show",
        "info": "",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "5aac35587527fc57",
        "type": "mqtt out",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1310,
        "y": 840,
        "wires": []
    },
    {
        "id": "0ed2ff81721cd33e",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/cmd/pause_charging",
        "topicType": "str",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "7b32fdb9765b5b25"
            ]
        ]
    },
    {
        "id": "ab49d20a4889568e",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Resume",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/cmd/resume_charging",
        "topicType": "str",
        "x": 160,
        "y": 760,
        "wires": [
            [
                "7b32fdb9765b5b25"
            ]
        ]
    },
    {
        "id": "7b32fdb9765b5b25",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "Insert Connector number",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "#",
                "fromt": "str",
                "to": "connector_number",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "5aac35587527fc57"
            ]
        ]
    },
    {
        "id": "9a048fd83e69579b",
        "type": "comment",
        "z": "f2458a538a8e5f3f",
        "name": "Commands",
        "info": "",
        "x": 170,
        "y": 640,
        "wires": []
    },
    {
        "id": "f33cad323bf95d51",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/state/max_current",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "21ea95d9c63eb21a"
            ]
        ]
    },
    {
        "id": "21ea95d9c63eb21a",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Filter connector number",
        "func": "if (msg.topic.indexOf(String(flow.get('connector_number'))) > -1) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "a9aef20cbd49b705"
            ]
        ]
    },
    {
        "id": "a9aef20cbd49b705",
        "type": "ui_text",
        "z": "f2458a538a8e5f3f",
        "group": "b364f7eb4621082b",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max Current",
        "format": "{{msg.payload | number: 1}}",
        "layout": "row-spread",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "fa0b56403833019e",
        "type": "ui_text",
        "z": "f2458a538a8e5f3f",
        "group": "b364f7eb4621082b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energy Charged",
        "format": "{{msg.payload | number:2}} kWh",
        "layout": "row-spread",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "d0b7af7ca41a418f",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Filter connector number",
        "func": "if (msg.topic.indexOf(String(flow.get('connector_number'))) > -1) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 340,
        "wires": [
            [
                "fa0b56403833019e"
            ]
        ]
    },
    {
        "id": "2bce1c1453ce4bcd",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/powermeter/totalKWattHr",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "d0b7af7ca41a418f"
            ]
        ]
    },
    {
        "id": "3ecef62bccc7798f",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/state/state_string",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "488de22fa47607ef"
            ]
        ]
    },
    {
        "id": "b032c9e500a86435",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/powermeter/totalKw",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 500,
        "wires": [
            [
                "0f641e2bfd7f99e4"
            ]
        ]
    },
    {
        "id": "21458341aaf2b48e",
        "type": "ui_level",
        "z": "f2458a538a8e5f3f",
        "group": "b364f7eb4621082b",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature:",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": "-20",
        "max": "85",
        "segWarn": "65",
        "segHigh": "75",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": "3",
        "colorschema": "valuedriven",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "segments",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 1010,
        "y": 560,
        "wires": []
    },
    {
        "id": "29d1ab3d5591e8e6",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/state/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 560,
        "wires": [
            [
                "d9475396be8eb74d"
            ]
        ]
    },
    {
        "id": "ca2e3dad158bd6a9",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "func": "if (msg.topic.indexOf('totalKw')>=0) {\n    console.warn(\"Received totalKw message\");\n    if (context.data.stop_updating_kw) {\n        console.error(\"stopping kw updates because this is annoying\")\n    } else {\n        context.data.totalKw = msg.payload;\n    }\n}\nelse if (msg.topic.indexOf('state_string')>=0) {\n    console.error(\"how can I show the logs\");\n    context.data.state_string = msg.payload;\n    if (msg.payload === 'Charging') {\n        context.data.totalKw = 200;\n        context.data.stop_updating_kw = true;\n    } else {\n        context.data.stop_updating_kw = false;\n    }\n}\n\n//node.warn(msg.topic);\nmsg.payload = context.data.totalKw;\nmsg.label = context.data.state_string;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.data = {}",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 480,
        "wires": [
            [
                "9212eca260b8a883",
                "3294112fae5f8935"
            ]
        ]
    },
    {
        "id": "9212eca260b8a883",
        "type": "debug",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 380,
        "wires": []
    },
    {
        "id": "3294112fae5f8935",
        "type": "ui_gauge",
        "z": "f2458a538a8e5f3f",
        "g": "6f6c30816dcbaaad",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{msg.label}}",
        "label": "Kilowatt",
        "format": "{{value}} kW",
        "min": "0",
        "max": "11",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1190,
        "y": 480,
        "wires": []
    },
    {
        "id": "0f641e2bfd7f99e4",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Filter connector number",
        "func": "if (msg.topic.indexOf(String(flow.get('connector_number'))) > -1) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "ca2e3dad158bd6a9"
            ]
        ]
    },
    {
        "id": "488de22fa47607ef",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Filter connector number",
        "func": "if (msg.topic.indexOf(String(flow.get('connector_number'))) > -1) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 460,
        "wires": [
            [
                "ca2e3dad158bd6a9"
            ]
        ]
    },
    {
        "id": "d9475396be8eb74d",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Filter connector number",
        "func": "if (msg.topic.indexOf(String(flow.get('connector_number'))) > -1) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "21458341aaf2b48e"
            ]
        ]
    },
    {
        "id": "22702b8273cf1a6d",
        "type": "comment",
        "z": "f2458a538a8e5f3f",
        "name": "Simulation control",
        "info": "",
        "x": 190,
        "y": 800,
        "wires": []
    },
    {
        "id": "4523fb170c67d663",
        "type": "ui_switch",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "label": "Simulation enable (HIL)",
        "tooltip": "",
        "group": "b364f7eb4621082b",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "everest_external/nodered/#/carsim/cmd/enable",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 210,
        "y": 840,
        "wires": [
            [
                "7b32fdb9765b5b25"
            ]
        ]
    },
    {
        "id": "02f22b0b03882430",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Car Plugin",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "start",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/carsim/cmd/execute_charging_session",
        "topicType": "str",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "7a722d03b22ad0be",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Stop & Unplug",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "stop",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/carsim/cmd/modify_charging_session",
        "topicType": "str",
        "x": 180,
        "y": 1100,
        "wires": [
            [
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "c936780a095149fe",
        "type": "ui_slider",
        "z": "f2458a538a8e5f3f",
        "name": "MaxCurrent Slider",
        "label": "",
        "tooltip": "",
        "group": "b364f7eb4621082b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "everest_external/nodered/#/cmd/set_max_current",
        "topicType": "str",
        "min": "6",
        "max": "32",
        "step": "0.1",
        "x": 450,
        "y": 700,
        "wires": [
            [
                "7b32fdb9765b5b25"
            ]
        ]
    },
    {
        "id": "286d2da627920fe9",
        "type": "ui_dropdown",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "label": "Car Simulation",
        "tooltip": "",
        "place": "Select option",
        "group": "b364f7eb4621082b",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "AC ISO15118-2",
                "value": "sleep 1;iso_wait_slac_matched;iso_set_departure_time null null;set_pc_scale 1;iso_start_v2g_session externalpayment,ac;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toogle 3;iso_wait_pwm_is_running;iso_set_departure_time null null;iso_start_v2g_session ExternalPayment,AC_three_phase_core;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
                "type": "str"
            },
            {
                "label": "AC ISO15118-2 Plug&Charge",
                "value": "sleep 1;iso_wait_slac_matched;iso_set_departure_time null null;set_pc_scale 1;iso_start_v2g_session contract,ac;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000#;iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toogle 3;iso_wait_pwm_is_running;iso_set_departure_time null null;iso_start_v2g_session contract,AC_three_phase_core;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "sim_commands",
        "topicType": "str",
        "className": "",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "d62a0b64a426ab5e",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Buffer sim commands",
        "func": "function handleDTEAChange() {\n    dt = global.get('sim_departure_time')\n    ea = global.get('sim_eamount')\n    let cmd = `iso_set_departure_time ${dt} ${ea}`\n\n    let start = flow.get('sim_commands_start').split(';')\n    let resume = flow.get('sim_commands_resume').split(';')\n\n    start.splice(2, 1, cmd)\n    resume.splice(2,1,cmd)\n    start = start.join(';')\n    resume = resume.join(';')\n    \n    flow.set('sim_commands_start', start);\n    flow.set('sim_commands_resume', resume);\n\n}\n\nfunction handleScaleChange() {\n    let cmd = `set_pc_scale ${global.get('scale_factor')}`;\n    let start = flow.get('sim_commands_start').split(';');\n    start.splice(3, 1, cmd);\n    start = start.join(';');\n    flow.set('sim_commands_start', start);\n}\n\n\nif (msg.topic.indexOf('sim_commands') > -1) {\n    const s = msg.payload.split('#');\n    flow.set('sim_commands_start', s[0]);\n    flow.set('sim_commands_stop', s[1]);\n    flow.set('sim_commands_pause', s[2]);\n    flow.set('sim_commands_resume', s[3]);\n    handleDTEAChange();\n} else if (msg.topic === 'eamount' || msg.topic === 'departure_time') {\n    handleDTEAChange();\n} else if (msg.topic === 'change_scale') {\n    handleScaleChange()\n} else if (msg.payload == 'start') {\n    msg.payload = flow.get('sim_commands_start');\n    return msg;\n} else if (msg.payload == 'stop') {\n    msg.payload = flow.get('sim_commands_stop');\n    return msg;\n} else if (msg.payload == 'pause') {\n    msg.payload = flow.get('sim_commands_pause');\n    return msg;\n} else if (msg.payload == 'resume') {\n    msg.payload = flow.get('sim_commands_resume');\n    return msg;\n} else {\n    msg.payload = 'NONE';\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1000,
        "wires": [
            [
                "7b32fdb9765b5b25",
                "f6036d137631cce6",
                "20eec1ea4805b3e1"
            ]
        ]
    },
    {
        "id": "20eec1ea4805b3e1",
        "type": "debug",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 960,
        "wires": []
    },
    {
        "id": "b96202c8182bbd2c",
        "type": "inject",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "sim_commands",
        "payload": "sleep 1;iec_wait_pwr_ready;sleep 1;draw_power_regulated 16,3;sleep 36000#unplug#pause;sleep 3600#draw_power_regulated 16,3;sleep 36000",
        "payloadType": "str",
        "x": 150,
        "y": 1300,
        "wires": [
            [
                "286d2da627920fe9"
            ]
        ]
    },
    {
        "id": "f6036d137631cce6",
        "type": "debug",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b2c2df9463470dcb",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "EV Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pause",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/carsim/cmd/modify_charging_session",
        "topicType": "str",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "c4df58eff004f658",
        "type": "ui_button",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "group": "b364f7eb4621082b",
        "order": 11,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "EV Resume",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "resume",
        "payloadType": "str",
        "topic": "everest_external/nodered/#/carsim/cmd/modify_charging_session",
        "topicType": "str",
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "cfb4f2d5e64377dc",
        "type": "ui_text_input",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "label": "EAmount",
        "tooltip": "",
        "group": "b364f7eb4621082b",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "eamount",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "780ad2bb33bc86f2"
            ]
        ]
    },
    {
        "id": "4094b097d51b3ce8",
        "type": "ui_text_input",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "label": "DepartureTime:",
        "tooltip": "",
        "group": "b364f7eb4621082b",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "departure_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "780ad2bb33bc86f2"
            ]
        ]
    },
    {
        "id": "780ad2bb33bc86f2",
        "type": "function",
        "z": "f2458a538a8e5f3f",
        "name": "Set SIM EAmount & DepartureTime",
        "func": "if (msg.payload == '') {\n    if (msg.topic == 'eamount') {\n        global.set('sim_eamount', 60);\n        return msg;\n    }\n    // topic == 'departure_time'\n    global.set('sim_departure_time', 86400);\n    return msg;\n}\nif (msg.topic == 'eamount') {\n    global.set('sim_eamount', msg.payload);\n    return msg;\n}\n\nglobal.set('sim_departure_time', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nflow.set('sim_eamount', 60);\nflow.set('sim_departure_time', 86400);",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 920,
        "wires": [
            [
                "d62a0b64a426ab5e",
                "bf5f34dff2350903"
            ]
        ]
    },
    {
        "id": "bf5f34dff2350903",
        "type": "link out",
        "z": "f2458a538a8e5f3f",
        "name": "Change PowerCurve",
        "mode": "link",
        "links": [
            "5f3298009f329307"
        ],
        "x": 705,
        "y": 940,
        "wires": []
    },
    {
        "id": "baeb1aaf9063b9bf",
        "type": "link out",
        "z": "f2458a538a8e5f3f",
        "name": "SendScaleFactor",
        "mode": "link",
        "links": [
            "eae708b24a9d107f"
        ],
        "x": 635,
        "y": 960,
        "wires": []
    },
    {
        "id": "01bb2dca0888954d",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scale_factor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 960,
        "wires": [
            [
                "baeb1aaf9063b9bf",
                "d62a0b64a426ab5e"
            ]
        ]
    },
    {
        "id": "704f4a55bac9bbd0",
        "type": "inject",
        "z": "f2458a538a8e5f3f",
        "name": "Initialize ScaleFactor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "01bb2dca0888954d"
            ]
        ]
    },
    {
        "id": "48a72b9462a47549",
        "type": "inject",
        "z": "f2458a538a8e5f3f",
        "name": "Initialize EAmount",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "initialize_eamount",
        "payload": "60",
        "payloadType": "num",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "cfb4f2d5e64377dc"
            ]
        ]
    },
    {
        "id": "60bab30e0dc4531f",
        "type": "ui_dropdown",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "label": "Simulation Speed",
        "tooltip": "",
        "place": "Select option",
        "group": "b364f7eb4621082b",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1x",
                "value": 1,
                "type": "num"
            },
            {
                "label": "5x",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10x",
                "value": 10,
                "type": "num"
            },
            {
                "label": "25x",
                "value": 25,
                "type": "num"
            },
            {
                "label": "100x",
                "value": 100,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "4b415dde9b2f16d2"
            ]
        ]
    },
    {
        "id": "3841407be78876c9",
        "type": "inject",
        "z": "f2458a538a8e5f3f",
        "name": "Initialize Alg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "60bab30e0dc4531f"
            ]
        ]
    },
    {
        "id": "4b415dde9b2f16d2",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "simulation_speed",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "bf4c4193760d5de0",
        "type": "mqtt out",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/evcc/confirm_sim_speed",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1090,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ed8ca18f81c2f83c",
        "type": "delay",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.25",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 1440,
        "wires": [
            [
                "bf4c4193760d5de0"
            ]
        ]
    },
    {
        "id": "f4d1201d8e3db060",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "send sim_eamount",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "simulation_speed",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1440,
        "wires": [
            [
                "ed8ca18f81c2f83c"
            ]
        ]
    },
    {
        "id": "ea9c66aaacafbe11",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/evcc/check_sim_speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1440,
        "wires": [
            [
                "f4d1201d8e3db060"
            ]
        ]
    },
    {
        "id": "f3aff0e1915a67e0",
        "type": "mqtt out",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/evcc/confirm_departure_time",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1110,
        "y": 1500,
        "wires": []
    },
    {
        "id": "d884513d544c76ea",
        "type": "delay",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.25",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 1500,
        "wires": [
            [
                "f3aff0e1915a67e0"
            ]
        ]
    },
    {
        "id": "e537cdf4fedff5d5",
        "type": "change",
        "z": "f2458a538a8e5f3f",
        "name": "send sim_eamount",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sim_departure_time",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1500,
        "wires": [
            [
                "d884513d544c76ea"
            ]
        ]
    },
    {
        "id": "ddebf3f094ae7856",
        "type": "mqtt in",
        "z": "f2458a538a8e5f3f",
        "name": "",
        "topic": "everest_external/nodered/+/evcc/check_departure_time",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1500,
        "wires": [
            [
                "e537cdf4fedff5d5"
            ]
        ]
    },
    {
        "id": "5f3298009f329307",
        "type": "link in",
        "z": "c545737cb63c89af",
        "name": "Update DepartureTime & EAmount",
        "links": [
            "bf5f34dff2350903"
        ],
        "x": 335,
        "y": 180,
        "wires": [
            [
                "df986d33355a9a29"
            ]
        ]
    },
    {
        "id": "eae708b24a9d107f",
        "type": "link in",
        "z": "c545737cb63c89af",
        "name": "Update ScaleFactor",
        "links": [
            "baeb1aaf9063b9bf"
        ],
        "x": 335,
        "y": 260,
        "wires": [
            [
                "df986d33355a9a29"
            ]
        ]
    },
    {
        "id": "52c80126d5237a48",
        "type": "exec",
        "z": "c545737cb63c89af",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "e0e46da51f4aa67c"
            ],
            [],
            []
        ]
    },
    {
        "id": "df986d33355a9a29",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Generate Python Call",
        "func": "const dt = global.get('sim_departure_time')\nconst eamount = global.get('sim_eamount')\nconst ks = global.get('scale_factor')\n// The path to environment should match the path defined in `/everest-demo/nodered/Dockerfile`\nconst path_to_environment = '/usr/src/node-red/python_environments/everest/bin/'\n\nmsg.payload = `${path_to_environment}python3 /bin/scripts/preview_curve_4_nodered.py ${dt} ${eamount} ${ks}`\nmsg.topic = 'power_curve_preview'\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 220,
        "wires": [
            [
                "52c80126d5237a48"
            ]
        ]
    },
    {
        "id": "e0e46da51f4aa67c",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Parse JSON",
        "func": "if (msg.topic === 'everest_external/nodered/{}/evcc/active_powercurve' ) {\n    // Python auto-formats dicts to use single quotes, but JSON.parse doesn't\n    // like that.  The RegEx below fixes this\n    msg.payload = msg.payload.replace(/'/g, '\"')\n}\n\ndata_points = JSON.parse(msg.payload)\nmsg.payload = [data_points]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 180,
        "wires": [
            [
                "4b210fbfde9e2f08"
            ]
        ]
    },
    {
        "id": "3729a222ca282c7d",
        "type": "mqtt in",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/+/evcc/active_powercurve",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "e0e46da51f4aa67c"
            ]
        ]
    },
    {
        "id": "4b210fbfde9e2f08",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Stop Edits During Charge",
        "func": "if(msg.topic === 'power_curve_preview') {\n    // Only allow preview when not charging\n    if (flow.get('charging_status') === 'Idle' ) {\n        return msg\n    }\n}\nelse { // If active curve is sent...\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "12f43625998f0333",
                "5efca4417c8a332d"
            ]
        ]
    },
    {
        "id": "12f43625998f0333",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Split Curve: Power Draw",
        "func": "let draw_curve = {\n    \"series\": [msg.payload[0].series[1]],\n    \"data\": [msg.payload[0].data[1]],\n    \"labels\": [msg.payload[0].labels[1]]\n}\n\nlet time_scale = 1\nlet scale = 1000\nif (msg.topic === 'power_curve_preview') {\n    scale = 1000\n    time_scale = 1000\n    draw_curve.data[0] = draw_curve.data[0].map(item => {\n    return {\n        x: item.x * time_scale, // Chart expects miliseconds, convert\n        y: item.y * scale // Convert miliwatt to watt\n    };\n});\n}\nelse {\n    draw_curve.data[0] = draw_curve.data[0].map(item => {\n    // Patch 4 scale, need to fix in manager later\n    return {\n        x: item.y * time_scale, \n        y: item.x * scale // Convert miliwatt to watt\n    };\n});\n}\n\nmsg.payload = [draw_curve]\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 200,
        "wires": [
            [
                "ccc2a322bf634e86"
            ]
        ]
    },
    {
        "id": "5efca4417c8a332d",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Split Curve: Proggress to EAMount",
        "func": "progress_curve = {\n    \"series\": [msg.payload[0].series[0]],\n    \"data\": [msg.payload[0].data[0]],\n    \"labels\": [msg.payload[0].labels[0]]\n}\nlet time_scale = 1\nlet scale = 1\nif (msg.topic === 'power_curve_preview') {\n    time_scale = 1000\n    scale = 1\n}\n\nprogress_curve.data[0] = progress_curve.data[0].map(item => {\n    return {\n        x: item.y * time_scale, // X & Y need swapped\n        y: item.x / scale // eamount progress\n    };\n});\n\nmsg.payload = [progress_curve]\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 160,
        "wires": [
            [
                "5824d70d456a06b9"
            ]
        ]
    },
    {
        "id": "72b7fc0e95c52de7",
        "type": "ui_dropdown",
        "z": "c545737cb63c89af",
        "name": "",
        "label": "Pre_Charge_Selection",
        "tooltip": "",
        "place": "Select option",
        "group": "1b3feb6e4367b645",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Smooth",
                "value": "algorithm_one",
                "type": "str"
            },
            {
                "label": "Aggressive",
                "value": "algorithm_two",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "9e4be3167cb21c79"
            ]
        ]
    },
    {
        "id": "9e4be3167cb21c79",
        "type": "change",
        "z": "c545737cb63c89af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "curve_algorithm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4d4d4bba0fc1c4b5",
        "type": "mqtt in",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/+/evcc/check_algorithm",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "86fb8dcec4c0e98b"
            ]
        ]
    },
    {
        "id": "7ec328e5ce0b491f",
        "type": "mqtt out",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/evcc/confirm_algorithm",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1030,
        "y": 480,
        "wires": []
    },
    {
        "id": "729aefb6c437fe34",
        "type": "delay",
        "z": "c545737cb63c89af",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "7ec328e5ce0b491f"
            ]
        ]
    },
    {
        "id": "52f0ea61e86f26c5",
        "type": "mqtt in",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/+/state/state_string",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "f226b7c82303f926",
                "415dc2f819e4158e"
            ]
        ]
    },
    {
        "id": "b660d08985412576",
        "type": "mqtt in",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/+/evcc/check_eamount",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc8686af.48d178",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 540,
        "wires": [
            [
                "02ab0d41176a08ba"
            ]
        ]
    },
    {
        "id": "86fb8dcec4c0e98b",
        "type": "change",
        "z": "c545737cb63c89af",
        "name": "send flow.curve_algorithm",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "curve_algorithm",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 480,
        "wires": [
            [
                "729aefb6c437fe34"
            ]
        ]
    },
    {
        "id": "02ab0d41176a08ba",
        "type": "change",
        "z": "c545737cb63c89af",
        "name": "send sim_eamount",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sim_eamount",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 540,
        "wires": [
            [
                "8525f6b0b4d3e1b4"
            ]
        ]
    },
    {
        "id": "8525f6b0b4d3e1b4",
        "type": "delay",
        "z": "c545737cb63c89af",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 540,
        "wires": [
            [
                "cbb94edb9a43ed46"
            ]
        ]
    },
    {
        "id": "cbb94edb9a43ed46",
        "type": "mqtt out",
        "z": "c545737cb63c89af",
        "name": "",
        "topic": "everest_external/nodered/evcc/confirm_eamount",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc8686af.48d178",
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "f226b7c82303f926",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "Reset Graph after Charge",
        "func": "if (msg.payload === \"Idle\") {\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 220,
        "wires": [
            [
                "df986d33355a9a29"
            ]
        ]
    },
    {
        "id": "415dc2f819e4158e",
        "type": "function",
        "z": "c545737cb63c89af",
        "name": "SetLocalChargingState",
        "func": "flow.set(\"charging_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5824d70d456a06b9",
        "type": "ui_chart",
        "z": "c545737cb63c89af",
        "name": "",
        "group": "1b3feb6e4367b645",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Progress to EAmount",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1700,
        "y": 160,
        "wires": [
            [
                "58b472228f5fa2a5"
            ]
        ]
    },
    {
        "id": "ccc2a322bf634e86",
        "type": "ui_chart",
        "z": "c545737cb63c89af",
        "name": "",
        "group": "1b3feb6e4367b645",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power Draw over Time",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1700,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "557244d96571d6da",
        "type": "inject",
        "z": "c545737cb63c89af",
        "name": "Initialize Alg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "algorithm_one",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "72b7fc0e95c52de7"
            ]
        ]
    },
    {
        "id": "58b472228f5fa2a5",
        "type": "debug",
        "z": "c545737cb63c89af",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 80,
        "wires": []
    }
]